@import './colors.scss';
@import './shadow-radius-unit-breakpoint.scss';

.diagram-background {
  background-image: var(--dots-background) !important;
  background-color: var(--dots-background) !important;
  background-size: var(--dots-background-size) !important;
}

// Basic element styles - using primary color for all elements
.djs-shape .djs-visual > :not(text) {
  stroke: var(--color-foreground-primary) !important;
  stroke-width: 2.5px !important;
}

.djs-shape {
  text, tspan {
    fill: var(--color-foreground-primary) !important;
    //stroke: none !important;
    stroke-width: 2px !important;
  }
}

.djs-shape .djs-visual text {
  fill: var(--color-foreground-primary) !important;
  stroke: none !important;  // Ensure no stroke on text
  z-index: 10 !important;
}

// All text elements
text {
  fill: var(--color-foreground-primary) !important;
  font-family: inherit;
}

// Sequence flows
.djs-connection {
  .djs-visual > path {
    fill: none !important;
    stroke: var(--color-foreground-primary) !important;
    stroke-width: 1.5px !important;
  }
}

// Marker for sequence flow arrows
marker#sequenceflow-arrow-normal {
  fill: var(--color-foreground-primary) !important;
}

// Ensure transparent backgrounds where needed
svg.new-parent {
  background-color: var(--color-background-page) !important;
}

.djs-direct-editing-parent {
  background-color: transparent !important;
}

.djs-shape.connect-ok {
  background-color: transparent !important;
  fill: none;
}

.djs-context-pad {
  background-color: var(--color-background-elevated) !important;

  .entry {
    background-color: var(--color-background-base) !important;
    color: var(--color-foreground-neutral) !important;
    border: 1px solid var(--color-border-primary) !important;
    box-shadow: var(--shadow-base) !important;

    &:hover {
      background-color: var(--color-background-neutral-faded) !important;
      border-color: var(--color-border-primary) !important;
    }

    .djs-icon {
      color: var(--color-foreground-primary) !important;
    }
  }
}

// Properties Panel and Popup Styling
.djs-popup {
  background-color: var(--color-background-elevated) !important;
  border: 1px solid var(--color-border-neutral) !important;
  box-shadow: var(--shadow-elevated) !important;
  border-radius: $radius-medium !important;


  .djs-popup-header {
    padding: $unit-2 $unit-3 !important;
    background-color: var(--color-background-base) !important;
    border-bottom: 1px solid var(--color-border-neutral-faded) !important;
    color: var(--color-foreground-neutral) !important;
  }

  .djs-popup-body {
    padding: $unit-1 0 !important;
    background-color: var(--color-background-elevated) !important;
  }

  .entry {
    display: flex !important;
    align-items: center !important;
    padding: $unit-2 $unit-3 !important;
    color: var(--color-foreground-neutral) !important;
    background-color: transparent !important;

    &:hover {
      background-color: var(--color-background-neutral-faded) !important;
    }

    &.disabled {
      color: var(--color-foreground-disabled) !important;
      cursor: not-allowed !important;
    }

    .djs-icon {
      color: currentColor !important;
    }
  }

  // Ensure popup arrow colors match
  &:before {
    border-color: var(--color-border-neutral) !important;
  }

  &:after {
    border-color: var(--color-background-elevated) !important;
  }
}

// Palette styling if needed
.djs-palette {
  background-color: var(--color-background-elevated) !important;
  border: none !important;
  width: 48px !important;
  height: 415px !important;
  .group {
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  .entry {
    color: var(--color-foreground-neutral) !important;
    fill: var(--color-foreground-neutral) !important;
    width: 48px !important;
    min-width: 48px !important;
  }
}

  // Ensure all task labels are primary colored
.djs-shape .djs-label {
  fill: var(--color-foreground-primary) !important;
  stroke: none !important;
}

.djs-direct-editing-content {
  color: var(--color-foreground-primary) !important;
  background-color: transparent !important;
}


.bjs-powered-by {
  display: none;
}

.test-run-bpmn {

  // Basic element styles - using primary color for all elements
  .djs-shape .djs-visual > :not(text) {
    stroke: $foreground-neutral-faded !important;
  }

  .djs-shape {
    text, tspan {
      fill: $foreground-neutral-faded !important;
    }
  }

  // active
  .process-active circle,
  .process-active rect,
  .process-active path {
      stroke: $foreground-neutral !important;
    }
  .process-active-label text {
      fill: $foreground-neutral !important;
  }

  @keyframes activeState {
    0% { stroke: $border-primary; stroke-width: 1.5px; }
    50% { stroke: $border-secondary; stroke-width: 2px; }
    100% { stroke: $border-primary; stroke-width: 1.5px; }
  }

  @keyframes statusChange {
    0% { fill: $background-base; }
    50% { fill: $background-primary-faded; }
    100% { fill: $background-base; }
  }

  @keyframes highlightFade {
    0% { opacity: 1; }
    50% { opacity: 0.6; }
    100% { opacity: 1; }
  }

  // Animation Applications
  .djs-connection .djs-visual path {
    animation: 1s linear infinite;
  }

  .element-status .djs-visual > * {
    animation: statusChange 3s ease-in-out infinite;
  }

  .element-highlight .djs-visual > * {
    animation: highlightFade 2s ease-in-out infinite;
  }

  .djs-connection .djs-visual path {
    stroke: $border-neutral !important;
    stroke-width: 1px;
    stroke-dasharray: 5,3;
  }

  // completed
  .process-completed circle,
  .process-completed rect {
      stroke: $foreground-positive !important;
    }

  // incident
  .process-incident circle,
  .process-incident rect {
      stroke: $foreground-critical !important;
  }

  // human task
  .process-human-task circle,
  .process-human-task rect {
      stroke: $foreground-secondary !important;
    }
  .process-human-task-label text {
      fill: $foreground-neutral !important;
    }

}

.ai-ableflow {
  .positive-task rect {
    stroke: $foreground-positive !important;
  }
}
